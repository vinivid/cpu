|cpu
clk => control_unit:cu.clk
clk => pc:program_counter.clk
clk => reg:instruction_register.clk
clk => reg:A_reg.clk
clk => reg:B_reg.clk
clk => reg:R_reg.clk
clk => reg1bit:Zero_flag_reg.clk
clk => reg1bit:Sign_flag_reg.clk
clk => reg1bit:Carry_flag_reg.clk
clk => reg1bit:Overflow_flag_reg.clk
clk => reg:reg_inst.clk
clk => mem256x8mif:qrt_mem.clock
clk => input_unit:input_unit_inst.clk
clk => output_unit:output_unit_main.clk
confirm_button => input_unit:input_unit_inst.send_push
input_fpga[0] => input_unit:input_unit_inst.inp[0]
input_fpga[1] => input_unit:input_unit_inst.inp[1]
input_fpga[2] => input_unit:input_unit_inst.inp[2]
input_fpga[3] => input_unit:input_unit_inst.inp[3]
input_fpga[4] => input_unit:input_unit_inst.inp[4]
input_fpga[5] => input_unit:input_unit_inst.inp[5]
input_fpga[6] => input_unit:input_unit_inst.inp[6]
input_fpga[7] => input_unit:input_unit_inst.inp[7]
reset_n => control_unit:cu.reset
reset_n => pc:program_counter.reset
reset_n => reg:instruction_register.reset
reset_n => reg:A_reg.reset
reset_n => reg:B_reg.reset
reset_n => reg:R_reg.reset
reset_n => reg1bit:Zero_flag_reg.reset
reset_n => reg1bit:Sign_flag_reg.reset
reset_n => reg1bit:Carry_flag_reg.reset
reset_n => reg1bit:Overflow_flag_reg.reset
reset_n => reg:reg_inst.reset
reset_n => output_unit:output_unit_main.reset
display_test[0] << display_7seg:disp1.out_disp[0]
display_test[1] << display_7seg:disp1.out_disp[1]
display_test[2] << display_7seg:disp1.out_disp[2]
display_test[3] << display_7seg:disp1.out_disp[3]
display_test[4] << display_7seg:disp1.out_disp[4]
display_test[5] << display_7seg:disp1.out_disp[5]
display_test[6] << display_7seg:disp1.out_disp[6]
display_test[7] << display_7seg:disp2.out_disp[0]
display_test[8] << display_7seg:disp2.out_disp[1]
display_test[9] << display_7seg:disp2.out_disp[2]
display_test[10] << display_7seg:disp2.out_disp[3]
display_test[11] << display_7seg:disp2.out_disp[4]
display_test[12] << display_7seg:disp2.out_disp[5]
display_test[13] << display_7seg:disp2.out_disp[6]
data_out[0] << output_unit:output_unit_main.data_output[0]
data_out[1] << output_unit:output_unit_main.data_output[1]
data_out[2] << output_unit:output_unit_main.data_output[2]
data_out[3] << output_unit:output_unit_main.data_output[3]
data_out[4] << output_unit:output_unit_main.data_output[4]
data_out[5] << output_unit:output_unit_main.data_output[5]
data_out[6] << output_unit:output_unit_main.data_output[6]
data_out[7] << output_unit:output_unit_main.data_output[7]


|cpu|display_7seg:disp1
input_disp[0] => Mux0.IN19
input_disp[0] => Mux1.IN19
input_disp[0] => Mux2.IN19
input_disp[0] => Mux3.IN19
input_disp[0] => Mux4.IN19
input_disp[0] => Mux5.IN19
input_disp[0] => Mux6.IN19
input_disp[1] => Mux0.IN18
input_disp[1] => Mux1.IN18
input_disp[1] => Mux2.IN18
input_disp[1] => Mux3.IN18
input_disp[1] => Mux4.IN18
input_disp[1] => Mux5.IN18
input_disp[1] => Mux6.IN18
input_disp[2] => Mux0.IN17
input_disp[2] => Mux1.IN17
input_disp[2] => Mux2.IN17
input_disp[2] => Mux3.IN17
input_disp[2] => Mux4.IN17
input_disp[2] => Mux5.IN17
input_disp[2] => Mux6.IN17
input_disp[3] => Mux0.IN16
input_disp[3] => Mux1.IN16
input_disp[3] => Mux2.IN16
input_disp[3] => Mux3.IN16
input_disp[3] => Mux4.IN16
input_disp[3] => Mux5.IN16
input_disp[3] => Mux6.IN16
out_disp[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
out_disp[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
out_disp[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
out_disp[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out_disp[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out_disp[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out_disp[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|display_7seg:disp2
input_disp[0] => Mux0.IN19
input_disp[0] => Mux1.IN19
input_disp[0] => Mux2.IN19
input_disp[0] => Mux3.IN19
input_disp[0] => Mux4.IN19
input_disp[0] => Mux5.IN19
input_disp[0] => Mux6.IN19
input_disp[1] => Mux0.IN18
input_disp[1] => Mux1.IN18
input_disp[1] => Mux2.IN18
input_disp[1] => Mux3.IN18
input_disp[1] => Mux4.IN18
input_disp[1] => Mux5.IN18
input_disp[1] => Mux6.IN18
input_disp[2] => Mux0.IN17
input_disp[2] => Mux1.IN17
input_disp[2] => Mux2.IN17
input_disp[2] => Mux3.IN17
input_disp[2] => Mux4.IN17
input_disp[2] => Mux5.IN17
input_disp[2] => Mux6.IN17
input_disp[3] => Mux0.IN16
input_disp[3] => Mux1.IN16
input_disp[3] => Mux2.IN16
input_disp[3] => Mux3.IN16
input_disp[3] => Mux4.IN16
input_disp[3] => Mux5.IN16
input_disp[3] => Mux6.IN16
out_disp[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
out_disp[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
out_disp[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
out_disp[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out_disp[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out_disp[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out_disp[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|control_unit:cu
instruction[0] => decoder:decoder_inst.instruction[0]
instruction[1] => decoder:decoder_inst.instruction[1]
instruction[2] => decoder:decoder_inst.instruction[2]
instruction[3] => decoder:decoder_inst.instruction[3]
instruction[4] => decoder:decoder_inst.instruction[4]
instruction[5] => decoder:decoder_inst.instruction[5]
instruction[6] => decoder:decoder_inst.instruction[6]
instruction[7] => decoder:decoder_inst.instruction[7]
reset => stage.OUTPUTSELECT
reset => stage.OUTPUTSELECT
reset => stage.OUTPUTSELECT
clk => stage~1.DATAIN
break_loop => process_0.IN1
control_mask[0] <= decoder:decoder_inst.reg_x2[0]
control_mask[1] <= decoder:decoder_inst.reg_x2[1]
control_mask[2] <= decoder:decoder_inst.reg_x1[0]
control_mask[3] <= decoder:decoder_inst.reg_x1[1]
control_mask[4] <= Equal18.DB_MAX_OUTPUT_PORT_TYPE
control_mask[5] <= iR.DB_MAX_OUTPUT_PORT_TYPE
control_mask[6] <= Equal17.DB_MAX_OUTPUT_PORT_TYPE
control_mask[7] <= addr.DB_MAX_OUTPUT_PORT_TYPE
control_mask[8] <= Mwe.DB_MAX_OUTPUT_PORT_TYPE
control_mask[9] <= Equal12.DB_MAX_OUTPUT_PORT_TYPE
control_mask[10] <= eF.DB_MAX_OUTPUT_PORT_TYPE
control_mask[11] <= eImm.DB_MAX_OUTPUT_PORT_TYPE
control_mask[12] <= eR.DB_MAX_OUTPUT_PORT_TYPE
control_mask[13] <= eB.DB_MAX_OUTPUT_PORT_TYPE
control_mask[14] <= eA.DB_MAX_OUTPUT_PORT_TYPE
control_mask[15] <= bitmask[15].DB_MAX_OUTPUT_PORT_TYPE
control_mask[16] <= ePC.DB_MAX_OUTPUT_PORT_TYPE
control_mask[17] <= alu_select.DB_MAX_OUTPUT_PORT_TYPE
control_mask[18] <= alu_select.DB_MAX_OUTPUT_PORT_TYPE
control_mask[19] <= alu_select.DB_MAX_OUTPUT_PORT_TYPE
control_mask[20] <= select_jmp_enbale.DB_MAX_OUTPUT_PORT_TYPE
control_mask[21] <= select_jmp_enbale.DB_MAX_OUTPUT_PORT_TYPE


|cpu|control_unit:cu|decoder:decoder_inst
instruction[0] => reg_x2[0].DATAIN
instruction[1] => reg_x2[1].DATAIN
instruction[2] => reg_x1[0].DATAIN
instruction[3] => reg_x1[1].DATAIN
instruction[4] => op[0].DATAIN
instruction[5] => op[1].DATAIN
instruction[6] => op[2].DATAIN
instruction[7] => op[3].DATAIN
op[0] <= instruction[4].DB_MAX_OUTPUT_PORT_TYPE
op[1] <= instruction[5].DB_MAX_OUTPUT_PORT_TYPE
op[2] <= instruction[6].DB_MAX_OUTPUT_PORT_TYPE
op[3] <= instruction[7].DB_MAX_OUTPUT_PORT_TYPE
reg_x1[0] <= instruction[2].DB_MAX_OUTPUT_PORT_TYPE
reg_x1[1] <= instruction[3].DB_MAX_OUTPUT_PORT_TYPE
reg_x2[0] <= instruction[0].DB_MAX_OUTPUT_PORT_TYPE
reg_x2[1] <= instruction[1].DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1b:jmp_selct
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a => mux_out.DATAB
b => mux_out.DATAB
c => mux_out.DATAB
d => mux_out.DATAB
mux_out <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1:adrres_from_where
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|pc:program_counter
clk => count_buffer[0].CLK
clk => count_buffer[1].CLK
clk => count_buffer[2].CLK
clk => count_buffer[3].CLK
clk => count_buffer[4].CLK
clk => count_buffer[5].CLK
clk => count_buffer[6].CLK
clk => count_buffer[7].CLK
enable => count_buffer.OUTPUTSELECT
enable => count_buffer.OUTPUTSELECT
enable => count_buffer.OUTPUTSELECT
enable => count_buffer.OUTPUTSELECT
enable => count_buffer.OUTPUTSELECT
enable => count_buffer.OUTPUTSELECT
enable => count_buffer.OUTPUTSELECT
enable => count_buffer.OUTPUTSELECT
reset => count_buffer.OUTPUTSELECT
reset => count_buffer.OUTPUTSELECT
reset => count_buffer.OUTPUTSELECT
reset => count_buffer.OUTPUTSELECT
reset => count_buffer.OUTPUTSELECT
reset => count_buffer.OUTPUTSELECT
reset => count_buffer.OUTPUTSELECT
reset => count_buffer.OUTPUTSELECT
jump_enable => count_buffer.OUTPUTSELECT
jump_enable => count_buffer.OUTPUTSELECT
jump_enable => count_buffer.OUTPUTSELECT
jump_enable => count_buffer.OUTPUTSELECT
jump_enable => count_buffer.OUTPUTSELECT
jump_enable => count_buffer.OUTPUTSELECT
jump_enable => count_buffer.OUTPUTSELECT
jump_enable => count_buffer.OUTPUTSELECT
jump_addres[0] => count_buffer.DATAB
jump_addres[1] => count_buffer.DATAB
jump_addres[2] => count_buffer.DATAB
jump_addres[3] => count_buffer.DATAB
jump_addres[4] => count_buffer.DATAB
jump_addres[5] => count_buffer.DATAB
jump_addres[6] => count_buffer.DATAB
jump_addres[7] => count_buffer.DATAB
adrres_out[0] <= count_buffer[0].DB_MAX_OUTPUT_PORT_TYPE
adrres_out[1] <= count_buffer[1].DB_MAX_OUTPUT_PORT_TYPE
adrres_out[2] <= count_buffer[2].DB_MAX_OUTPUT_PORT_TYPE
adrres_out[3] <= count_buffer[3].DB_MAX_OUTPUT_PORT_TYPE
adrres_out[4] <= count_buffer[4].DB_MAX_OUTPUT_PORT_TYPE
adrres_out[5] <= count_buffer[5].DB_MAX_OUTPUT_PORT_TYPE
adrres_out[6] <= count_buffer[6].DB_MAX_OUTPUT_PORT_TYPE
adrres_out[7] <= count_buffer[7].DB_MAX_OUTPUT_PORT_TYPE


|cpu|reg:instruction_register
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
d[0] => q.DATAB
d[1] => q.DATAB
d[2] => q.DATAB
d[3] => q.DATAB
d[4] => q.DATAB
d[5] => q.DATAB
d[6] => q.DATAB
d[7] => q.DATAB
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1:A_data_mux
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux2to1:A_data_or_insert_mux
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|reg:A_reg
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
d[0] => q.DATAB
d[1] => q.DATAB
d[2] => q.DATAB
d[3] => q.DATAB
d[4] => q.DATAB
d[5] => q.DATAB
d[6] => q.DATAB
d[7] => q.DATAB
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1:B_data_mux
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux2to1:B_data_or_insert_mux
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|reg:B_reg
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
d[0] => q.DATAB
d[1] => q.DATAB
d[2] => q.DATAB
d[3] => q.DATAB
d[4] => q.DATAB
d[5] => q.DATAB
d[6] => q.DATAB
d[7] => q.DATAB
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1:R_data_mux
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1:R_data_input_alu
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|reg:R_reg
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
d[0] => q.DATAB
d[1] => q.DATAB
d[2] => q.DATAB
d[3] => q.DATAB
d[4] => q.DATAB
d[5] => q.DATAB
d[6] => q.DATAB
d[7] => q.DATAB
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|reg1bit:Zero_flag_reg
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
d => q.DATAB
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|reg1bit:Sign_flag_reg
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
d => q.DATAB
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|reg1bit:Carry_flag_reg
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
d => q.DATAB
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|reg1bit:Overflow_flag_reg
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
d => q.DATAB
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|reg:reg_inst
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
enable => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
d[0] => q.DATAB
d[1] => q.DATAB
d[2] => q.DATAB
d[3] => q.DATAB
d[4] => q.DATAB
d[5] => q.DATAB
d[6] => q.DATAB
d[7] => q.DATAB
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1:addres_no_pc
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux2to1:pc_or_other
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1:write_data_select
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mem256x8mif:qrt_mem
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
clock => altsyncram:altsyncram_component.clock0
data[0] => altsyncram:altsyncram_component.data_a[0]
data[1] => altsyncram:altsyncram_component.data_a[1]
data[2] => altsyncram:altsyncram_component.data_a[2]
data[3] => altsyncram:altsyncram_component.data_a[3]
data[4] => altsyncram:altsyncram_component.data_a[4]
data[5] => altsyncram:altsyncram_component.data_a[5]
data[6] => altsyncram:altsyncram_component.data_a[6]
data[7] => altsyncram:altsyncram_component.data_a[7]
wren => altsyncram:altsyncram_component.wren_a
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]


|cpu|mem256x8mif:qrt_mem|altsyncram:altsyncram_component
wren_a => altsyncram_7a24:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_7a24:auto_generated.data_a[0]
data_a[1] => altsyncram_7a24:auto_generated.data_a[1]
data_a[2] => altsyncram_7a24:auto_generated.data_a[2]
data_a[3] => altsyncram_7a24:auto_generated.data_a[3]
data_a[4] => altsyncram_7a24:auto_generated.data_a[4]
data_a[5] => altsyncram_7a24:auto_generated.data_a[5]
data_a[6] => altsyncram_7a24:auto_generated.data_a[6]
data_a[7] => altsyncram_7a24:auto_generated.data_a[7]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_7a24:auto_generated.address_a[0]
address_a[1] => altsyncram_7a24:auto_generated.address_a[1]
address_a[2] => altsyncram_7a24:auto_generated.address_a[2]
address_a[3] => altsyncram_7a24:auto_generated.address_a[3]
address_a[4] => altsyncram_7a24:auto_generated.address_a[4]
address_a[5] => altsyncram_7a24:auto_generated.address_a[5]
address_a[6] => altsyncram_7a24:auto_generated.address_a[6]
address_a[7] => altsyncram_7a24:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_7a24:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_7a24:auto_generated.q_a[0]
q_a[1] <= altsyncram_7a24:auto_generated.q_a[1]
q_a[2] <= altsyncram_7a24:auto_generated.q_a[2]
q_a[3] <= altsyncram_7a24:auto_generated.q_a[3]
q_a[4] <= altsyncram_7a24:auto_generated.q_a[4]
q_a[5] <= altsyncram_7a24:auto_generated.q_a[5]
q_a[6] <= altsyncram_7a24:auto_generated.q_a[6]
q_a[7] <= altsyncram_7a24:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|cpu|mem256x8mif:qrt_mem|altsyncram:altsyncram_component|altsyncram_7a24:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a7.PORTAWE


|cpu|mux4to1:alu_mux_a
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1:alu_mux_b
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst
a[0] => a_and_b[0].IN0
a[0] => a_or_b[0].IN0
a[0] => adder_sub:ads:0:adsx.a
a[0] => r.DATAB
a[0] => Equal5.IN7
a[1] => a_and_b[1].IN0
a[1] => a_or_b[1].IN0
a[1] => adder_sub:ads:1:adsx.a
a[1] => r.DATAB
a[1] => Equal5.IN6
a[2] => a_and_b[2].IN0
a[2] => a_or_b[2].IN0
a[2] => adder_sub:ads:2:adsx.a
a[2] => r.DATAB
a[2] => Equal5.IN5
a[3] => a_and_b[3].IN0
a[3] => a_or_b[3].IN0
a[3] => adder_sub:ads:3:adsx.a
a[3] => r.DATAB
a[3] => Equal5.IN4
a[4] => a_and_b[4].IN0
a[4] => a_or_b[4].IN0
a[4] => adder_sub:ads:4:adsx.a
a[4] => r.DATAB
a[4] => Equal5.IN3
a[5] => a_and_b[5].IN0
a[5] => a_or_b[5].IN0
a[5] => adder_sub:ads:5:adsx.a
a[5] => r.DATAB
a[5] => Equal5.IN2
a[6] => a_and_b[6].IN0
a[6] => a_or_b[6].IN0
a[6] => adder_sub:ads:6:adsx.a
a[6] => r.DATAB
a[6] => Equal5.IN1
a[7] => a_and_b[7].IN0
a[7] => a_or_b[7].IN0
a[7] => adder_sub:ads:7:adsx.a
a[7] => r.DATAB
a[7] => Equal5.IN0
b[0] => a_and_b[0].IN1
b[0] => a_or_b[0].IN1
b[0] => adder_sub:ads:0:adsx.b
b[1] => a_and_b[1].IN1
b[1] => a_or_b[1].IN1
b[1] => adder_sub:ads:1:adsx.b
b[2] => a_and_b[2].IN1
b[2] => a_or_b[2].IN1
b[2] => adder_sub:ads:2:adsx.b
b[3] => a_and_b[3].IN1
b[3] => a_or_b[3].IN1
b[3] => adder_sub:ads:3:adsx.b
b[4] => a_and_b[4].IN1
b[4] => a_or_b[4].IN1
b[4] => adder_sub:ads:4:adsx.b
b[5] => a_and_b[5].IN1
b[5] => a_or_b[5].IN1
b[5] => adder_sub:ads:5:adsx.b
b[6] => a_and_b[6].IN1
b[6] => a_or_b[6].IN1
b[6] => adder_sub:ads:6:adsx.b
b[7] => a_and_b[7].IN1
b[7] => a_or_b[7].IN1
b[7] => adder_sub:ads:7:adsx.b
op[0] => adder_sub:ads:0:adsx.a_b
op[0] => adder_sub:ads:0:adsx.cin
op[0] => adder_sub:ads:1:adsx.a_b
op[0] => adder_sub:ads:2:adsx.a_b
op[0] => adder_sub:ads:3:adsx.a_b
op[0] => adder_sub:ads:4:adsx.a_b
op[0] => adder_sub:ads:5:adsx.a_b
op[0] => adder_sub:ads:6:adsx.a_b
op[0] => adder_sub:ads:7:adsx.a_b
op[0] => Equal0.IN1
op[0] => Equal1.IN2
op[0] => Equal2.IN1
op[0] => Equal3.IN2
op[0] => Equal4.IN2
op[1] => Equal0.IN0
op[1] => Equal1.IN1
op[1] => Equal2.IN2
op[1] => Equal3.IN1
op[1] => Equal4.IN1
op[2] => Equal0.IN2
op[2] => Equal1.IN0
op[2] => Equal2.IN0
op[2] => Equal3.IN0
op[2] => Equal4.IN0
r[0] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[1] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[2] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[3] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[4] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[5] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[6] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[7] <= r.DB_MAX_OUTPUT_PORT_TYPE
flags[0] <= flags.DB_MAX_OUTPUT_PORT_TYPE
flags[1] <= flags.DB_MAX_OUTPUT_PORT_TYPE
flags[2] <= flags.DB_MAX_OUTPUT_PORT_TYPE
flags[3] <= flags.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|adder_sub:\ads:0:adsx
a => a_xor_b.IN1
a => a_and_b.IN1
b => t_b.IN0
cin => axb_and_cin.IN1
cin => q.IN1
a_b => t_b.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|adder_sub:\ads:1:adsx
a => a_xor_b.IN1
a => a_and_b.IN1
b => t_b.IN0
cin => axb_and_cin.IN1
cin => q.IN1
a_b => t_b.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|adder_sub:\ads:2:adsx
a => a_xor_b.IN1
a => a_and_b.IN1
b => t_b.IN0
cin => axb_and_cin.IN1
cin => q.IN1
a_b => t_b.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|adder_sub:\ads:3:adsx
a => a_xor_b.IN1
a => a_and_b.IN1
b => t_b.IN0
cin => axb_and_cin.IN1
cin => q.IN1
a_b => t_b.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|adder_sub:\ads:4:adsx
a => a_xor_b.IN1
a => a_and_b.IN1
b => t_b.IN0
cin => axb_and_cin.IN1
cin => q.IN1
a_b => t_b.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|adder_sub:\ads:5:adsx
a => a_xor_b.IN1
a => a_and_b.IN1
b => t_b.IN0
cin => axb_and_cin.IN1
cin => q.IN1
a_b => t_b.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|adder_sub:\ads:6:adsx
a => a_xor_b.IN1
a => a_and_b.IN1
b => t_b.IN0
cin => axb_and_cin.IN1
cin => q.IN1
a_b => t_b.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|alu:alu_inst|adder_sub:\ads:7:adsx
a => a_xor_b.IN1
a => a_and_b.IN1
b => t_b.IN0
cin => axb_and_cin.IN1
cin => q.IN1
a_b => t_b.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|cpu|input_unit:input_unit_inst
clk => roll_over:roll_counter.clk
clk => pushed.CLK
send_push => pushed.OUTPUTSELECT
send_push => roll_over:roll_counter.reset
inp[0] => inp_v[0].DATAIN
inp[1] => inp_v[1].DATAIN
inp[2] => inp_v[2].DATAIN
inp[3] => inp_v[3].DATAIN
inp[4] => inp_v[4].DATAIN
inp[5] => inp_v[5].DATAIN
inp[6] => inp_v[6].DATAIN
inp[7] => inp_v[7].DATAIN
go_next <= roll_over:roll_counter.roll_out
inp_v[0] <= inp[0].DB_MAX_OUTPUT_PORT_TYPE
inp_v[1] <= inp[1].DB_MAX_OUTPUT_PORT_TYPE
inp_v[2] <= inp[2].DB_MAX_OUTPUT_PORT_TYPE
inp_v[3] <= inp[3].DB_MAX_OUTPUT_PORT_TYPE
inp_v[4] <= inp[4].DB_MAX_OUTPUT_PORT_TYPE
inp_v[5] <= inp[5].DB_MAX_OUTPUT_PORT_TYPE
inp_v[6] <= inp[6].DB_MAX_OUTPUT_PORT_TYPE
inp_v[7] <= inp[7].DB_MAX_OUTPUT_PORT_TYPE


|cpu|input_unit:input_unit_inst|roll_over:roll_counter
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => roll_out.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => roll_out.OUTPUTSELECT
clk => roll_out~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
roll_out <= roll_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|mux4to1:data_to_output_select
selector[0] => Equal0.IN1
selector[0] => Equal1.IN0
selector[0] => Equal2.IN1
selector[0] => Equal3.IN1
selector[1] => Equal0.IN0
selector[1] => Equal1.IN1
selector[1] => Equal2.IN0
selector[1] => Equal3.IN0
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
a[5] => mux_out.DATAB
a[6] => mux_out.DATAB
a[7] => mux_out.DATAB
b[0] => mux_out.DATAB
b[1] => mux_out.DATAB
b[2] => mux_out.DATAB
b[3] => mux_out.DATAB
b[4] => mux_out.DATAB
b[5] => mux_out.DATAB
b[6] => mux_out.DATAB
b[7] => mux_out.DATAB
c[0] => mux_out.DATAB
c[1] => mux_out.DATAB
c[2] => mux_out.DATAB
c[3] => mux_out.DATAB
c[4] => mux_out.DATAB
c[5] => mux_out.DATAB
c[6] => mux_out.DATAB
c[7] => mux_out.DATAB
d[0] => mux_out.DATAB
d[1] => mux_out.DATAB
d[2] => mux_out.DATAB
d[3] => mux_out.DATAB
d[4] => mux_out.DATAB
d[5] => mux_out.DATAB
d[6] => mux_out.DATAB
d[7] => mux_out.DATAB
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[5] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[6] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[7] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|cpu|output_unit:output_unit_main
output_enable => data.OUTPUTSELECT
output_enable => data.OUTPUTSELECT
output_enable => data.OUTPUTSELECT
output_enable => data.OUTPUTSELECT
output_enable => data.OUTPUTSELECT
output_enable => data.OUTPUTSELECT
output_enable => data.OUTPUTSELECT
output_enable => data.OUTPUTSELECT
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
data_to_output[0] => data.DATAB
data_to_output[1] => data.DATAB
data_to_output[2] => data.DATAB
data_to_output[3] => data.DATAB
data_to_output[4] => data.DATAB
data_to_output[5] => data.DATAB
data_to_output[6] => data.DATAB
data_to_output[7] => data.DATAB
data_output[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE
data_output[1] <= data[1].DB_MAX_OUTPUT_PORT_TYPE
data_output[2] <= data[2].DB_MAX_OUTPUT_PORT_TYPE
data_output[3] <= data[3].DB_MAX_OUTPUT_PORT_TYPE
data_output[4] <= data[4].DB_MAX_OUTPUT_PORT_TYPE
data_output[5] <= data[5].DB_MAX_OUTPUT_PORT_TYPE
data_output[6] <= data[6].DB_MAX_OUTPUT_PORT_TYPE
data_output[7] <= data[7].DB_MAX_OUTPUT_PORT_TYPE


